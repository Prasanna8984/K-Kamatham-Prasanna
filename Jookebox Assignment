// creating a new flutter project
flutter create reminder_app
cd reminder_app
// Adding dependencies
dependencies:
  flutter:
    sdk: flutter
  flutter_local_notifications: ^x.x.x  
// Reminder Application
import 'package:flutter/material.dart';
import 'package:flutter_local_notifications/flutter_local_notifications.dart';
import 'package:intl/intl.dart';

void main() {
  runApp(ReminderApp());
}

class ReminderApp extends StatefulWidget {
  @override
  _ReminderAppState createState() => _ReminderAppState();
}

class _ReminderAppState extends State<ReminderApp> {
  String? selectedDay;
  TimeOfDay selectedTime = TimeOfDay.now();
  String? selectedActivity;

  final List<String> days = [
    'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'
  ];
  final List<String> activities = [
    'Wake Up', 'Go to Gym', 'Breakfast', 'Meetings', 'Lunch', 
    'Quick Nap', 'Go to Library', 'Dinner', 'Go to Sleep'
  ];

  final FlutterLocalNotificationsPlugin _notificationsPlugin = FlutterLocalNotificationsPlugin();

  @override
  void initState() {
    super.initState();
    _initializeNotifications();
  }

  void _initializeNotifications() async {
    const AndroidInitializationSettings initializationSettingsAndroid =
        AndroidInitializationSettings('@mipmap/ic_launcher');
    final InitializationSettings initializationSettings =
        InitializationSettings(android: initializationSettingsAndroid);
    await _notificationsPlugin.initialize(initializationSettings);
  }

  Future<void> _scheduleNotification() async {
    if (selectedDay == null || selectedActivity == null) {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('Please select all fields!'))
      );
      return;
    }

    DateTime now = DateTime.now();
    DateTime scheduledDateTime = DateTime(now.year, now.month, now.day, selectedTime.hour, selectedTime.minute);

    // Adjust for the selected day
    int daysUntil = (days.indexOf(selectedDay!) - now.weekday + 7) % 7;
    scheduledDateTime = scheduledDateTime.add(Duration(days: daysUntil));

    await _notificationsPlugin.zonedSchedule(
      0,
      'Reminder: ${selectedActivity}',
      'Time for your ${selectedActivity}',
      scheduledDateTime,
      const NotificationDetails(
        android: AndroidNotificationDetails(
          'reminder_channel', 
          'Reminders', 
          'Channel for reminder notifications',
          sound: RawResourceAndroidNotificationSound('sound'), // Add your sound file in android/app/src/main/res/raw/sound.mp3
        ),
      ),
      androidAllowWhileIdle: true,
      uiLocalNotificationDateInterpretation: UILocalNotificationDateInterpretation.absoluteTime,
    );

    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(content: Text('Reminder set for $selectedDay at ${selectedTime.format(context)}'))
    );
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(title: Text('Daily Reminder')),
        body: Padding(
          padding: const EdgeInsets.all(16.0),
          child: Column(
            children: [
              DropdownButton<String>(
                hint: Text('Select Day'),
                value: selectedDay,
                onChanged: (newValue) {
                  setState(() {
                    selectedDay = newValue;
                  });
                },
                items: days.map<DropdownMenuItem<String>>((String value) {
                  return DropdownMenuItem<String>(
                    value: value,
                    child: Text(value),
                  );
                }).toList(),
              ),
              SizedBox(height: 16),
              ElevatedButton(
                onPressed: () async {
                  TimeOfDay? time = await showTimePicker(
                    context: context,
                    initialTime: selectedTime,
                  );
                  if (time != null) {
                    setState(() {
                      selectedTime = time;
                    });
                  }
                },
                child: Text('Select Time: ${selectedTime.format(context)}'),
              ),
              SizedBox(height: 16),
              DropdownButton<String>(
                hint: Text('Select Activity'),
                value: selectedActivity,
                onChanged: (newValue) {
                  setState(() {
                    selectedActivity = newValue;
                  });
                },
                items: activities.map<DropdownMenuItem<String>>((String value) {
                  return DropdownMenuItem<String>(
                    value: value,
                    child: Text(value),
                  );
                }).toList(),
              ),
              SizedBox(height: 16),
              ElevatedButton(
                onPressed: _scheduleNotification,
                child: Text('Set Reminder'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
//Run the application
flutter run

